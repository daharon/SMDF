---
AWSTemplateFormatVersion: 2010-09-09
Description: Monitoring

Resources:

  ##
  # Lambda Functions
  ##
  MonitoringClientRegistration:
    Type: AWS::Lambda::Function
    Properties:
      Description: Register clients with the monitoring system.
      Runtime: java8
      Handler: '${clientRegistrationHandler}'
      Code:
        S3Bucket: '${codeS3Bucket}'
        S3Key: '${codeS3Key}'
      Role: !GetAtt MonitoringClientRegistrationRole.Arn
      Timeout: 60
      MemorySize: 512
      Environment:
        Variables:
          CLIENT_CHECK_TOPIC: !Ref MonitoringClientCheckDistributor
          CLIENT_DB_TABLE: !Ref MonitoringClientsTable
      Tags:
        - Key: App
          Value: Monitoring

  MonitoringClientCleanup:
    Type: AWS::Lambda::Function
    Properties:
      Description: Cleanup resources of modified or deleted clients.
      Runtime: java8
      Handler: '${clientCleanupHandler}'
      Code:
        S3Bucket: '${codeS3Bucket}'
        S3Key: '${codeS3Key}'
      Role: !GetAtt MonitoringClientCleanupRole.Arn
      Timeout: 60
      MemorySize: 512
      Environment:
        Variables:
          CLIENT_DB_TABLE: !Ref MonitoringClientsTable
      Tags:
        - Key: App
          Value: Monitoring

  MonitoringCheckScheduler:
    Type: AWS::Lambda::Function
    Properties:
      Description: Fire events to the SNS Fanout Topic.
      Runtime: java8
      Handler: '${checkSchedulerHandler}'
      Code:
        S3Bucket: '${codeS3Bucket}'
        S3Key: '${codeS3Key}'
      Role: !GetAtt MonitoringCheckSchedulerRole.Arn
      Timeout: 60
      MemorySize: 512
      Environment:
        Variables:
          CLIENT_CHECK_TOPIC: !Ref MonitoringClientCheckDistributor
          SERVERLESS_CHECK_TOPIC: !Ref MonitoringServerlessCheckDistributor
      Tags:
        - Key: App
          Value: Monitoring

  ##
  # IAM Roles
  ##
  MonitoringClientRegistrationRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /monitoring/
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: DynamoDBClientsTable
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Query
                  - dynamodb:BatchGetItem
                  - dynamodb:GetItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                Resource:
                  - !GetAtt MonitoringClientsTable.Arn
        - PolicyName: SQSClientQueues
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:*
                Resource:
                  - !Join
                    - ':'
                    - - 'arn:aws:sqs'
                      - !Ref 'AWS::Region'
                      - !Ref 'AWS::AccountId'
                      - 'monitoring-*'
        - PolicyName: SNSClientSubscriptions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sns:Subscribe
                  - sns:SetSubscriptionAttributes
                  - sns:Unsubscribe
                Resource:
                  - !Ref MonitoringClientCheckDistributor

  MonitoringClientCleanupRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /monitoring/
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: DynamoDBClientsTableStream
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:DescribeStream
                  - dynamodb:GetRecords
                  - dynamodb:GetShardIterator
                  - dynamodb:ListStreams
                Resource:
                  - !GetAtt MonitoringClientsTable.StreamArn
        - PolicyName: SQSClientQueues
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:DeleteQueue
                Resource:
                  - !Join
                    - ':'
                    - - 'arn:aws:sqs'
                      - !Ref 'AWS::Region'
                      - !Ref 'AWS::AccountId'
                      - 'monitoring-*'
        - PolicyName: SNSClientSubscriptions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sns:Unsubscribe
                Resource:
                  - !Ref MonitoringClientCheckDistributor

  MonitoringCheckSchedulerRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /monitoring/
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
          Action:
            - sts:AssumeRole
      Policies:
        - PolicyName: SNSTopics
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource:
                  - !Ref MonitoringClientCheckDistributor
                  - !Ref MonitoringServerlessCheckDistributor

  ##
  # Scheduled Events
  ##
  MonitoringCheckSchedulerEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Monitoring check scheduler event rule.
      ScheduleExpression: rate(1 minute)
      State: ENABLED
      Targets:
        - Arn: !GetAtt MonitoringCheckScheduler.Arn
          Id: MonitoringCheckScheduler

  MonitoringCheckSchedulerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref MonitoringCheckScheduler
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt MonitoringCheckSchedulerEventRule.Arn

  ###
  # Event Source Mappings
  ###
  MonitoringClientsTableEvents:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      Enabled: true
      EventSourceArn: !GetAtt MonitoringClientsTable.StreamArn
      FunctionName: !GetAtt MonitoringClientCleanup.Arn
      StartingPosition: LATEST
      BatchSize: 10

  ##
  # SNS Topics
  ##
  MonitoringClientCheckDistributor:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: monitoring-client-check-distributor

  MonitoringServerlessCheckDistributor:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: monitoring-serverless-check-distributor

  ##
  # DynamoDB Tables
  ##
  MonitoringClientsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: name
          AttributeType: S
      KeySchema:
        - AttributeName: name
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      Tags:
        - Key: App
          Value: Monitoring
