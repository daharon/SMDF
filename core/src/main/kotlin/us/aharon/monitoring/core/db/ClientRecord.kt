/*
 * Copyright (c) 2018 Daniel Aharon
 */

package us.aharon.monitoring.core.db

import com.amazonaws.services.dynamodbv2.datamodeling.*

import us.aharon.monitoring.core.util.toMd5HexString

import java.time.ZonedDateTime


/**
 * DynamoDB record for client registration.
 * Keep track of the client queues.
 *
 * The table name is dynamically defined in [TableNameResolver].
 */
@DynamoDBTable(tableName = "DYNAMICALLY_DEFINED")
internal data class ClientRecord(

        @DynamoDBAttribute
        var name: String? = null,

        @DynamoDBAttribute
        @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.L)
        var tags: List<String>? = null,

        @DynamoDBAttribute
        var queueArn: String? = null,

        @DynamoDBAttribute
        var queueUrl: String? = null,

        @DynamoDBAttribute
        var subscriptionArn: String? = null
) {
    @DynamoDBHashKey
    @DynamoDBNamed("pk")
    var clientId: String? = null
            get() = generateId(name!!)

    @DynamoDBRangeKey
    @DynamoDBConvertedBool(value = DynamoDBConvertedBool.Format.true_false)
    @DynamoDBNamed("sk")
    var active: Boolean? = true

    @DynamoDBAutoGenerated(generator = DynamoDBTimestampGenerator::class)
    @DynamoDBTypeConverted(converter = ZonedDateTimeConverter::class)
    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.S)
    @DynamoDBNamed("data")
    var createdAt: ZonedDateTime? = null


    companion object {
        const val CLIENT_PK_PREFIX: String = "CLIENT"

        fun generateId(name: String): String = "$CLIENT_PK_PREFIX#${name.toMd5HexString()}"
    }
}

