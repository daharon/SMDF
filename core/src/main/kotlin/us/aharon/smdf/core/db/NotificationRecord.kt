/*
 * Copyright (c) 2019 Daniel Aharon
 */

package us.aharon.smdf.core.db

import com.amazonaws.services.dynamodbv2.datamodeling.*

import us.aharon.smdf.core.util.toMd5HexString

import java.time.ZonedDateTime


/**
 * DynamoDB record for notification events.
 * Record notifications that have been sent and the check results that triggered them.
 *
 * The table name is dynamically defined in [TableNameResolver].
 */
@DynamoDBTable(tableName = "DYNAMICALLY_DEFINED")
internal data class NotificationRecord(
        @DynamoDBAttribute
        var handler: String? = null,

        @DynamoDBAttribute
        var checkGroup: String? = null,

        @DynamoDBAttribute
        var checkName: String? = null,

        @DynamoDBAttribute
        var source: String? = null,

        @DynamoDBAttribute
        var resultId: String? = null,

        @DynamoDBAttribute
        @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.S)
        @DynamoDBTypeConverted(converter = ZonedDateTimeConverter::class)
        var resultCompletedAt: ZonedDateTime? = null,

        @DynamoDBAttribute
        var description: String? = null
) {
    @DynamoDBHashKey
    @DynamoDBNamed("pk")
    var notificationId: String? = null
            get() = generateNotificationId(this.checkGroup!!, this.checkName!!)

    @DynamoDBRangeKey
    @DynamoDBNamed("sk")
    var notificationSortKey: String? = null
            get() = "${ZonedDateTimeConverter().convert(this.resultCompletedAt!!)}|${this.source}"

    @DynamoDBAttribute
    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.S)
    @DynamoDBAutoGenerated(generator = DynamoDBTimestampGenerator::class)
    @DynamoDBTypeConverted(converter = ZonedDateTimeConverter::class)
    var createdAt: ZonedDateTime? = null

    @DynamoDBAttribute
    @DynamoDBNamed("data")
    var data: String? = DATA_FIELD

    companion object {
        const val DATA_FIELD = "NOTIFICATION"

        /**
         * Generate the notification's hash ID.
         *
         * @param group The name of the check group that caused this notification.
         * @param name The check name that caused this notification.
         * @param source The source of the check result.
         * @return An MD5 hash that serves as an ID for this notification.
         */
        fun generateNotificationId(group: String, name: String): String =
                "${group}_${name}".toMd5HexString()
    }
}
